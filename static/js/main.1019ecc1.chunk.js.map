{"version":3,"sources":["components/Player/Player.module.css","components/Track/Track.module.css","App.module.css","components/Playlist/Playlist.module.css","components/Track/Track.tsx","generateColor.ts","components/PlayerContext/PlayerContext.tsx","hocs/useQueryParam.tsx","components/Playlist/Playlist.tsx","components/Player/Player.tsx","App.tsx","index.tsx"],"names":["module","exports","Track","track","order","greeting","emoji","backgroundColor","greetingColor","playColor","isCurrent","onClick","className","Styles","Track__Box","Track__Box_Current","join","style","Track__Order","Track__Greeting","Track__Play","generateColor","Math","round","random","toString","padStart","PlayerState","useQueryParam","nameParam","useState","initialValue","setInitialValue","syncInitialValue","useCallback","URLSearchParams","window","location","search","get","useEffect","value","newSearchParams","tap","queryParams","set","history","pushState","Tracks","Data","PlayerContext","createContext","tracks","currentTrack","currentTime","currentEndTime","playerState","INITIAL","playbackRate","changeTrack","noop","play","pause","toggle","increasePlaybackRate","changeCurrentTime","closeTrack","PLAYBACK_RATES","PlayerProvider","children","locationCurrentTime","setLocationCurrentTime","locationTrack","setLocationTrack","audio","useRef","Audio","idxTimer","map","setCurrentTime","setCurrentEndTime","setPlayerState","setPlaybackRate","setCurrentTrack","isFromLocation","setIsFromLocation","Number","parseInt","PLAYING","current","clearInterval","setInterval","onLoadMetadata","duration","addEventListener","removeEventListener","newPlaybackRate","splice","findIndex","rate","length","once","PAUSE","autoplay","t","Object","assign","src","url","preload","isFirstTime","Provider","Playlist","playlistRef","useContext","find","scrollTo","top","clientHeight","left","clientWidth","ref","Player","shareInputRef","URL","searchParams","shareUrl","changeShareUrl","isShareWithTime","setIsShareWithTime","isShareDialogOpen","setIsShareDialogOpen","onClickControl","toggleShareDialog","state","toggleShareWithTime","muiTheme","useMemo","createMuiTheme","overrides","MuiSlider","thumb","color","rail","onChange","_evt","newTime","Array","isArray","onCopy","focus","setSelectionRange","document","execCommand","setTimeout","onShareFocus","onClickTitle","PlayerWrapper","Player__Title","Player__TrackTitle","Player__Icon","Player__Controls","Player__Control","Player__Control_Pause","borderColor","ThemeProvider","theme","Slider","Player__Slider","min","max","Player__Rate","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogContent","Input","fullWidth","inputRef","FormControlLabel","control","Checkbox","checked","label","DialogActions","Button","autoFocus","AppComponent","Header","href","target","Header__Logo","Header__Name","App","memo","Snowflakes","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1019ecc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlayerWrapper\":\"Player_PlayerWrapper__1zRUD\",\"Player\":\"Player_Player__RgpZ6\",\"Player__Title\":\"Player_Player__Title__1qRL5\",\"Player__TrackTitle\":\"Player_Player__TrackTitle__1fOr2\",\"Player__Icon\":\"Player_Player__Icon__2V_5j\",\"Player__Controls\":\"Player_Player__Controls__8AhE4\",\"Player__Control\":\"Player_Player__Control__1jmbe\",\"Player__Slider\":\"Player_Player__Slider__F5S9m\",\"Player__Control_Pause\":\"Player_Player__Control_Pause__3K-Ob\",\"Player__Rate\":\"Player_Player__Rate__1tHr6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Track\":\"Track_Track__1vKnE\",\"Track__Order\":\"Track_Track__Order__1Bf70\",\"Track__Box\":\"Track_Track__Box__1TyAu\",\"Track__Box_Current\":\"Track_Track__Box_Current__mIIAH\",\"Bounce\":\"Track_Bounce__zvq5J\",\"Track__Greeting\":\"Track_Track__Greeting__3DAJV\",\"Track__Play\":\"Track_Track__Play__1jX6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"App_Header__ZS1m2\",\"Header__Logo\":\"App_Header__Logo__12YZm\",\"Header__Name\":\"App_Header__Name__1MdJO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Playlist\":\"Playlist_Playlist__2_QVK\"};","import Styles from 'components/Track/Track.module.css';\nimport { TrackEntity } from 'components/PlayerContext/PlayerContext';\n\ntype TrackProps = {\n  track: TrackEntity;\n  isCurrent: boolean;\n  onClick: (order: number) => void;\n}\n\nexport function Track({\n  track: {\n    order,\n    greeting,\n    emoji,\n    backgroundColor,\n    greetingColor,\n    playColor\n  },\n  isCurrent,\n  onClick\n}: TrackProps) {\n  return (\n    <div className={Styles.Track}>\n      <div className={[Styles.Track__Box, isCurrent && Styles.Track__Box_Current].join(' ')} style={{backgroundColor}}>\n        <div className={Styles.Track__Order}>{order}</div>\n        <div className={Styles.Track__Greeting} style={{backgroundColor: greetingColor}}>{greeting}</div>\n        <div className={Styles.Track__Play} style={{backgroundColor: playColor}} onClick={() => onClick(order)}>{emoji}</div>\n      </div>\n    </div>\n  )\n}","const MAX_COLOR = 16777215;\n\nexport function generateColor() {\n  return `#${Math.round(Math.random() * MAX_COLOR).toString(16).padStart(6, '0')}`;\n}","import { createContext, useCallback, useRef, useState, PropsWithChildren, useEffect } from 'react';\nimport noop from 'lodash/noop';\n\nimport { default as Data } from 'data/playlist.json';\nimport { TrackDto } from 'dto/Track';\nimport { generateColor } from 'generateColor';\nimport { useQueryParam } from 'hocs/useQueryParam';\n\nconst Tracks: TrackDto[] = Data;\n\nexport type TrackEntity = TrackDto & {\n  backgroundColor: string;\n  playColor: string;\n  greetingColor: string;\n}\n\nexport enum PlayerState {\n  INITIAL,\n  PAUSE,\n  PLAYING\n};\n\n\ntype PlayerContextEntity = {\n  tracks: TrackEntity[];\n  currentTrack: TrackEntity | null;\n  currentTime: number;\n  currentEndTime: number;\n  changeTrack: (track?: TrackEntity) => void;\n  playerState: PlayerState;\n  playbackRate: number;\n  play: () => void;\n  pause: () => void;\n  toggle: () => void;\n  increasePlaybackRate: () => void;\n  changeCurrentTime: (newValue: number) => void;\n  closeTrack: () => void;\n};\n\nexport const PlayerContext = createContext<PlayerContextEntity>({\n  tracks: [],\n  currentTrack: null,\n  currentTime: 0,\n  currentEndTime: 0,\n  playerState: PlayerState.INITIAL,\n  playbackRate: 1,\n  changeTrack: noop,\n  play: noop,\n  pause: noop,\n  toggle: noop,\n  increasePlaybackRate: noop,\n  changeCurrentTime: noop,\n  closeTrack: noop\n});\n\nconst PLAYBACK_RATES = [\n  1,\n  1.25,\n  1.5,\n  1.75,\n  2\n];\n\nexport const PlayerProvider = ({children}: PropsWithChildren<{}>) => {\n  const [locationCurrentTime, setLocationCurrentTime] = useQueryParam('currentTime');\n  const [locationTrack, setLocationTrack] = useQueryParam('track');\n  const audio = useRef(new Audio);\n  const idxTimer = useRef<number>(-1);\n  const [tracks] = useState(Tracks.map(track => ({\n    ...track,\n    backgroundColor: generateColor(),\n    playColor: generateColor(),\n    greetingColor: generateColor()\n  })));\n  const [currentTime, setCurrentTime] = useState(0);\n  const [currentEndTime, setCurrentEndTime] = useState(0);\n  const [playerState, setPlayerState] = useState(PlayerState.INITIAL);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [currentTrack, setCurrentTrack] = useState<TrackEntity | null>(null);\n  const [isFromLocation, setIsFromLocation] = useState(false);\n\n  useEffect(() => {\n    if (isFromLocation) {\n      return;\n    }\n\n    if (locationCurrentTime && locationTrack && !currentTrack) {\n      changeTrack(tracks[Number.parseInt(locationTrack)], false)\n      changeCurrentTime(Number.parseInt(locationCurrentTime), true);\n      setCurrentTime(Number.parseInt(locationCurrentTime));\n      setIsFromLocation(true);\n    }\n  }, [\n    Number.parseInt(locationCurrentTime || '') > 0, \n    Number.parseInt(locationTrack || '') > 0,\n    currentTrack,\n    isFromLocation\n  ]);\n\n  useEffect(() => {\n    if (playerState !== PlayerState.PLAYING) {\n      return;\n    };\n\n    if (idxTimer.current !== -1) {\n      clearInterval(idxTimer.current);\n    }\n\n    // @ts-ignore\n    idxTimer.current = setInterval(() => {\n      setCurrentTime(audio.current.currentTime);\n    }, 200);\n\n    return () => clearInterval(idxTimer.current);\n  }, [playerState]);\n\n  const onLoadMetadata = useCallback(() => {\n    setCurrentEndTime(audio.current.duration)\n  }, []);\n\n  useEffect(() => {\n    const { current } = audio;\n\n    current.addEventListener('loadedmetadata', onLoadMetadata);\n    return () => current.removeEventListener('loadedmetadata', onLoadMetadata);\n  }, [audio.current])\n\n  const increasePlaybackRate = useCallback(() => {\n    const newPlaybackRate = [...PLAYBACK_RATES].splice(\n      PLAYBACK_RATES.findIndex(rate => rate === playbackRate) - PLAYBACK_RATES.length + 1,\n      1\n    )[0];\n\n    setPlaybackRate(newPlaybackRate);\n    audio.current.playbackRate = newPlaybackRate;\n  }, [playbackRate]);\n\n  const play = useCallback(() => {\n    if (playerState !== PlayerState.INITIAL) {\n      audio.current.play();\n      setPlayerState(PlayerState.PLAYING);\n    }\n\n    audio.current.addEventListener('canplay', () => {\n      audio.current.currentTime = currentTime;\n      audio.current.play();\n      setPlayerState(PlayerState.PLAYING);\n    }, { once: true })\n  }, [playerState, setPlayerState, currentTime]);\n\n  const pause = useCallback(() => {\n    audio.current.pause();\n    setPlayerState(PlayerState.PAUSE);\n  }, [playerState, setPlayerState]);\n\n  const toggle = useCallback(() => {\n    playerState === PlayerState.PLAYING ? pause() : play(); \n  }, [playerState, pause, play]);\n\n  const changeTrack = useCallback((track?: TrackEntity, autoplay: boolean = true) => {\n    if (!track) {\n      return;\n    }\n\n    if (currentTrack?.order === track.order) {\n      toggle();\n      return;\n    }\n\n    setLocationTrack(tracks.findIndex(t => t.order === track.order).toString());\n    setLocationCurrentTime('');\n    setCurrentTrack(track);\n    pause();\n\n    audio.current = Object.assign(new Audio(), {\n      src: track.url,\n      playbackRate,\n      preload: true\n    });\n\n    autoplay && play();\n  }, [playerState, currentTrack, setCurrentTrack, play, pause, playbackRate]);\n\n  const changeCurrentTime = useCallback((currentTime: number, isFirstTime: boolean = false) => {\n    setLocationCurrentTime(currentTime.toString());\n    setCurrentTime(currentTime);\n    audio.current.currentTime = currentTime;\n\n    if (isFirstTime) {\n      audio.current.addEventListener('canplay', () => {\n        audio.current.currentTime = currentTime;\n      }, { once: true })\n    }\n  }, [])\n\n  const closeTrack = useCallback(() => {\n    pause();\n    setCurrentTrack(null);\n  }, [pause])\n\n  return (\n    <PlayerContext.Provider value={{\n      tracks,\n      currentTrack,\n      currentTime,\n      currentEndTime,\n      playerState,\n      playbackRate,\n      changeTrack,\n      pause,\n      play,\n      toggle,\n      increasePlaybackRate,\n      changeCurrentTime,\n      closeTrack\n    }}>\n      {children}\n    </PlayerContext.Provider>\n  );\n}","import { useState, useCallback, useEffect } from 'react';\nimport tap from 'lodash/tap';\n\nexport const useQueryParam = (nameParam: string): [string | null, (newValue: string) => void] => {\n  const [initialValue, setInitialValue] = useState<string | null>(null);\n  const syncInitialValue = useCallback(() => {\n    setInitialValue(new URLSearchParams(window.location.search).get(nameParam) || '');\n  }, []);\n\n  useEffect(() => {\n    syncInitialValue();\n  }, []);\n\n  const updateInitialValue = useCallback((value: string) => {\n    setInitialValue(value);\n    const newSearchParams = `?${tap(\n      new URLSearchParams(window.location.search), \n      (queryParams) => queryParams.set(nameParam, value)\n    ).toString()}`;\n\n    window.history.pushState(null, '', newSearchParams);\n  }, []);\n\n  return [initialValue, updateInitialValue];\n}","import { useCallback, useContext, UIEvent, useEffect, useRef } from 'react';\n\nimport { Track } from 'components/Track/Track';\nimport { default as Styles } from 'components/Playlist/Playlist.module.css';\nimport { PlayerContext } from 'components/PlayerContext/PlayerContext';\nimport { useQueryParam } from 'hocs/useQueryParam';\n\nexport function Playlist() {\n  const playlistRef = useRef<HTMLDivElement>(null);\n  const { tracks, changeTrack, currentTrack } = useContext(PlayerContext)\n  const [ locationTrack ] = useQueryParam('track');\n\n  const onClick = useCallback((order: number) => {\n    changeTrack(tracks.find(track => track.order === order));\n  }, [changeTrack, tracks]);\n\n  useEffect(() => {\n    if (!playlistRef.current) {\n      return;\n    }\n\n    playlistRef.current.scrollTo({\n      top: playlistRef.current.clientHeight * Number.parseInt(locationTrack || '0'),\n      left: playlistRef.current.clientWidth * Number.parseInt(locationTrack || '0')\n    })\n  }, [locationTrack]);\n\n  return (\n    <div className={Styles.Playlist} ref={playlistRef}>\n      {tracks.map(track => (\n        <Track key={track.order} track={track} onClick={onClick} isCurrent={currentTrack?.order === track.order} />\n      ))}\n    </div>\n  );\n}","import { useCallback, useContext, useMemo, useState, ChangeEvent, useRef, useEffect } from 'react';\nimport { Slider } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport ShareIcon from '@material-ui/icons/Share';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport tap from 'lodash/tap';\n\nimport { default as Styles } from 'components/Player/Player.module.css';\nimport { PlayerContext, PlayerState } from 'components/PlayerContext/PlayerContext';\nimport { useQueryParam } from 'hocs/useQueryParam';\n\nexport function Player() {\n  const {\n    playerState,\n    playbackRate, \n    toggle,\n    currentTrack,\n    currentTime,\n    currentEndTime,\n    increasePlaybackRate,\n    changeCurrentTime,\n    closeTrack,\n    tracks\n  } = useContext(PlayerContext);\n  const [locationTrack, setLocationTrack] = useQueryParam('track');\n  const shareInputRef = useRef<HTMLInputElement>(null)\n  const [shareUrl, changeShareUrl] = useState<string>(() => {\n    return tap(new URL(window.location.toString()), url => {\n      url.searchParams.set('track', tracks.findIndex(track => track.order === currentTrack?.order).toString());\n      url.searchParams.set('currentTime', '');\n    }).toString();\n  });\n  const [isShareWithTime, setIsShareWithTime] = useState(false);\n  const [isShareDialogOpen, setIsShareDialogOpen] = useState(false);\n  const onClickControl = useCallback(() => {\n    toggle();\n  }, [toggle]);\n\n  const toggleShareDialog = useCallback(() => {\n    setIsShareDialogOpen(state => !state);\n  }, []);\n\n  const toggleShareWithTime = useCallback(() => {\n    setIsShareWithTime(state => !state);\n  }, [isShareWithTime]);\n\n  useEffect(() => {\n    changeShareUrl(\n      tap(new URL(window.location.toString()), url => {\n        url.searchParams.set('track', tracks.findIndex(track => track.order === currentTrack?.order).toString());\n        url.searchParams.set('currentTime', '');\n      }).toString()\n    );\n  }, [currentTrack]);\n\n  useEffect(() => {\n    const url = new URL(window.location.toString());\n    if (isShareWithTime) {\n      url.searchParams.set('track', tracks.findIndex(track => track.order === currentTrack?.order).toString());\n      url.searchParams.set('currentTime', currentTime.toString());\n    } else {\n      url.searchParams.set('track', tracks.findIndex(track => track.order === currentTrack?.order).toString());\n      url.searchParams.set('currentTime', '');\n    }\n\n    changeShareUrl(url.toString());\n\n  }, [isShareWithTime])\n\n  const muiTheme = useMemo(() => createMuiTheme({\n    overrides: {\n      MuiSlider: {\n        thumb: { color: currentTrack?.playColor },\n        track: { color: currentTrack?.playColor },\n        rail: { color: currentTrack?.playColor }\n      }\n    }\n  }), [currentTrack]);\n\n  const onChange = useCallback((_evt: ChangeEvent<{}>, newTime: number | number[]) => {\n    if (Array.isArray(newTime)) {\n      return;\n    }\n\n    changeCurrentTime(newTime);\n  }, []);\n\n  const onCopy = useCallback(() => {\n    if (!shareInputRef.current) {\n      return;\n    }\n\n    shareInputRef.current.focus();\n    shareInputRef.current.setSelectionRange(0, shareInputRef.current.value.length);\n    document.execCommand('copy');\n    setTimeout(() => toggleShareDialog(), 0);\n  }, [])\n\n  const onShareFocus = useCallback(() => {\n    if (!shareInputRef.current) {\n      return;\n    }\n\n    shareInputRef.current.setSelectionRange(0, shareInputRef.current.value.length);\n  }, []);\n\n  const onClickTitle = useCallback(() => {\n    setLocationTrack(tracks.findIndex(track => track.order === currentTrack?.order).toString());\n  }, [currentTrack]);\n\n  if (!currentTrack) {\n    return null;\n  }\n\n  const { backgroundColor, playColor } = currentTrack;\n\n\n  return (\n    <>\n      <div className={Styles.PlayerWrapper}>\n        <div className={Styles.Player} style={{ backgroundColor, color: playColor }}>\n          <div className={Styles.Player__Title}>\n            <span className={Styles.Player__TrackTitle} onClick={onClickTitle}>\n              {currentTrack.order} {currentTrack.greeting}\n            </span>\n            <div>\n              <span className={Styles.Player__Icon} onClick={toggleShareDialog}><ShareIcon /></span>\n              <span className={Styles.Player__Icon} onClick={closeTrack}><CloseIcon /></span>\n            </div>\n          </div>\n          <div className={Styles.Player__Controls}>\n            <div \n              className={[Styles.Player__Control, playerState === PlayerState.PLAYING && Styles.Player__Control_Pause].join(' ')}\n              style={{ borderColor: `transparent transparent transparent ${playColor}`}}\n              onClick={onClickControl}\n            />\n            <ThemeProvider theme={muiTheme} >\n              <Slider className={Styles.Player__Slider} min={0} max={currentEndTime} onChange={onChange} value={currentTime} />\n            </ThemeProvider>\n            <div className={Styles.Player__Rate} onClick={increasePlaybackRate}>x{playbackRate}</div>\n          </div>\n        </div>\n      </div>\n      <Dialog\n        open={isShareDialogOpen}\n        onClose={toggleShareDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <Input value={shareUrl} fullWidth onClick={onShareFocus} inputRef={shareInputRef} />\n          <FormControlLabel \n            control={<Checkbox checked={isShareWithTime} onChange={toggleShareWithTime} />} \n            label=\"С текущего момента\" \n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleShareDialog} color='secondary'>\n            Закрыть\n          </Button>\n          <Button onClick={onCopy} color='primary' autoFocus>\n            Копировать\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}","import { memo, useRef, useState } from 'react';\n\nimport { Playlist } from 'components/Playlist/Playlist';\nimport { Player } from 'components/Player/Player';\nimport { default as Styles } from 'App.module.css';\nimport { PlayerProvider } from 'components/PlayerContext/PlayerContext';\n\nfunction AppComponent() {\n  return (\n    <PlayerProvider>\n      <header className={Styles.Header}>\n        <a href='https://youknow.st' target='_blank'>\n          <span className={Styles.Header__Logo} />\n        </a>\n        <span className={Styles.Header__Name}>2020</span>\n      </header>\n      <Playlist />\n      <Player />\n    </PlayerProvider>\n  );\n}\n\nexport const App = memo(AppComponent);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// @ts-ignore\nimport Snowflakes from 'magic-snowflakes';\nimport './index.css';\n\nSnowflakes({\n  color: '#FFF'\n});\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}